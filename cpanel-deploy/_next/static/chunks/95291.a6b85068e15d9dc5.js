"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[95291],{95291:(t,a,e)=>{e.d(a,{relayBiconomyTransaction:()=>l});var n=e(77680),s=e(58528),o=e(2579),r=e(99232),i=e(53360),d=e(43324),c=e(8118),h=e(74340);async function p({account:t,serializableTransaction:a,transaction:e,gasless:i}){let c=(0,o.P)({address:i.relayerForwarderAddress,chain:e.chain,client:e.client}),p=await (0,h.readContract)({contract:c,method:"function getNonce(address,uint256) view returns (uint256)",params:[t.address,0n]}),l=Math.floor(Date.now()/1e3)+(i.deadlineSeconds??3600),u={from:t.address,to:a.to,token:s.cF,txGas:a.gas,tokenGasPrice:0n,batchId:0n,batchNonce:p,deadline:l,data:a.data};if(!u.to)throw Error("Cannot send a transaction without a `to` address");if(!u.txGas)throw Error("Cannot send a transaction without a `gas` value");if(!u.data)throw Error("Cannot send a transaction without a `data` value");let y=(0,n.h)([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[(0,r.bv)(u.from),(0,r.bv)(u.to),(0,r.bv)(u.token),u.txGas,u.tokenGasPrice,u.batchId,u.batchNonce,(0,d.S)(u.data)]);return[u,await t.signMessage({message:y})]}async function l(t){let[a,e]=await p(t),n=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:(0,c.stringify)({apiId:t.gasless.apiId,params:[a,e],from:a.from,to:a.to,gasLimit:a.txGas}),headers:{"x-api-key":t.gasless.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(!n.ok)throw Error(`Failed to send transaction: ${await n.text()}`);let s=await n.json(),o=s.txHash;if((0,i.q)(o))return{transactionHash:o,chain:t.transaction.chain,client:t.transaction.client};throw Error(`Failed to send transaction: ${(0,c.stringify)(s)}`)}}}]);