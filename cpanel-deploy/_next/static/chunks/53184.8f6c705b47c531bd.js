"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[53184,80074],{53184:(e,t,a)=>{a.d(t,{InAppWebConnector:()=>el});var i=a(17273);let n=new Map,r={getItem:async e=>n.get(e)??null,setItem:async(e,t)=>{n.set(e,t)},removeItem:async e=>{n.delete(e)}};var s=a(74957),o=a(98864);async function l({authToken:e,client:t,ecosystem:a}){let n=(0,o.getClientFetch)(t,a),r=await n(`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/2024-05-05/accounts`,{method:"GET",headers:{"Content-Type":"application/json","x-thirdweb-client-id":t.clientId,Authorization:`Bearer embedded-wallet-token:${e}`}});if(!r.ok){let e=await r.text().catch(()=>"Unknown error");throw Error(`Failed to get user info: ${e}`)}return await r.json()}var c=a(8118);let d=(0,i.getThirdwebBaseUrl)("inAppWallet"),h=`${d}/`,u=`${h}api/2023-10-20`,g=`${u}/embedded-wallet/validate-custom-jwt`,p=`${u}/embedded-wallet/validate-custom-auth-endpoint`,w=(e,t)=>t instanceof Error?`${e}: ${t.message}`:`${e}: ${(0,c.stringify)(t)}`;async function m(e){let t=(0,o.getClientFetch)(e.client,e.ecosystem),a=await t(p,{method:"POST",headers:{"Content-Type":"application/json"},body:(0,c.stringify)({payload:e.payload,developerClientId:e.client.clientId})});if(!a.ok){let e=await a.json();throw Error(`Custom auth endpoint authentication error: ${e.message}`)}try{let{verifiedToken:e}=await a.json();return{storedToken:e}}catch(e){throw Error(w("Malformed response from post auth_endpoint authentication",e))}}var y=a(55866);async function f(e){let t=(0,o.getClientFetch)(e.client,e.ecosystem),a=(0,y.f)({authOption:"backend",client:e.client,ecosystem:e.ecosystem}),i=await t(`${a}`,{method:"POST",headers:{"Content-Type":"application/json"},body:(0,c.stringify)({walletSecret:e.walletSecret})});if(!i.ok)throw Error("Failed to generate backend account");return await i.json()}var b=a(29510),v=a(25955);async function I(e){let t=new b.t({storage:e.storage,clientId:e.client.clientId,ecosystem:e.ecosystem}),a=await t.getGuestSessionId();a||(a=(0,v.O)(32),t.saveGuestSessionId(a));let i=(0,o.getClientFetch)(e.client,e.ecosystem),n=(0,y.K)({authOption:"guest",client:e.client,ecosystem:e.ecosystem}),r=await i(`${n}`,{method:"POST",headers:{"Content-Type":"application/json"},body:(0,c.stringify)({sessionId:a})});if(!r.ok)throw Error("Failed to generate guest account");return await r.json()}async function k(e){let t=(0,o.getClientFetch)(e.client,e.ecosystem),a=await t(g,{method:"POST",headers:{"Content-Type":"application/json"},body:(0,c.stringify)({jwt:e.jwt,developerClientId:e.client.clientId})});if(!a.ok){let e=await a.json();throw Error(`JWT authentication error: ${e.message}`)}try{let{verifiedToken:e}=await a.json();return{storedToken:e}}catch(e){throw Error(w("Malformed response from post jwt authentication",e))}}async function T({client:e,ecosystem:t,tokenToLink:a,storage:n}){let r=(0,o.getClientFetch)(e,t),s=(0,i.getThirdwebBaseUrl)("inAppWallet"),l=await n.getAuthCookie();if(!l)throw Error("Failed to link account, no user logged in");let d={Authorization:`Bearer iaw-auth-token:${l}`,"Content-Type":"application/json"},h=await r(`${s}/api/2024-05-05/account/connect`,{method:"POST",headers:d,body:(0,c.stringify)({accountAuthTokenToConnect:a})});if(!h.ok)throw Error((await h.json()).message||"Failed to link account.");let{linkedAccounts:u}=await h.json();return u??[]}async function S({client:e,ecosystem:t,profileToUnlink:a,storage:n}){let r=(0,o.getClientFetch)(e,t),s=(0,i.getThirdwebBaseUrl)("inAppWallet"),l=await n.getAuthCookie();if(!l)throw Error("Failed to unlink account, no user logged in");let d={Authorization:`Bearer iaw-auth-token:${l}`,"Content-Type":"application/json"},h=await r(`${s}/api/2024-05-05/account/disconnect`,{method:"POST",headers:d,body:(0,c.stringify)(a)});if(!h.ok)throw Error((await h.json()).message||"Failed to unlink account.");let{linkedAccounts:u}=await h.json();return u??[]}async function P({client:e,ecosystem:t,storage:a}){let n=(0,o.getClientFetch)(e,t),r=(0,i.getThirdwebBaseUrl)("inAppWallet"),s=await a.getAuthCookie();if(!s)throw Error("Failed to get linked accounts, no user logged in");let l={Authorization:`Bearer iaw-auth-token:${s}`,"Content-Type":"application/json"},c=await n(`${r}/api/2024-05-05/accounts`,{method:"GET",headers:l});if(!c.ok)throw Error((await c.json()).message||"Failed to get linked accounts.");let{linkedAccounts:d}=await c.json();return d??[]}function W(){return`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function C(e,t){return`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/2024-05-05/login/passkey?type=${e}${t?`&username=${t}`:""}`}async function L(e){var t;if(!e.passkeyClient.isAvailable())throw Error("Passkeys are not available on this device");let a=(0,o.getClientFetch)(e.client,e.ecosystem),i=e.username??(t=e.ecosystem,`${t?.id??"wallet"}-${new Date().toISOString()}`),n=await a(C("sign-up",i)),r=await n.json();if(!r.challenge)throw Error("No challenge received");let s=r.challenge,l=await e.passkeyClient.register({name:i,challenge:s,rp:e.rp}),d={};e.ecosystem?.partnerId&&(d["x-ecosystem-partner-id"]=e.ecosystem.partnerId),e.ecosystem?.id&&(d["x-ecosystem-id"]=e.ecosystem.id);let h=await a(W(),{method:"POST",headers:{"Content-Type":"application/json",...d},body:(0,c.stringify)({type:"sign-up",authenticatorData:l.authenticatorData,credentialId:l.credentialId,serverVerificationId:r.serverVerificationId,clientData:l.clientData,username:i,credential:{publicKey:l.credential.publicKey,algorithm:l.credential.algorithm},origin:l.origin,rpId:e.rp.id})}),u=await h.json();if(!u||!u.storedToken)throw Error(`Error verifying passkey: ${u.message??"unknown error"}`);return await e.storage?.savePasskeyCredentialId(l.credentialId),u}async function E(e){if(!e.passkeyClient.isAvailable())throw Error("Passkeys are not available on this device");let t=(0,o.getClientFetch)(e.client,e.ecosystem),[a,i]=await Promise.all([t(C("sign-in")).then(e=>e.json()),e.storage?.getPasskeyCredentialId()]);if(!a.challenge)throw Error("No challenge received");let n=a.challenge,r=await e.passkeyClient.authenticate({credentialId:i??void 0,challenge:n,rp:e.rp}),s={};e.ecosystem?.partnerId&&(s["x-ecosystem-partner-id"]=e.ecosystem.partnerId),e.ecosystem?.id&&(s["x-ecosystem-id"]=e.ecosystem.id);let l=await t(W(),{method:"POST",headers:{"Content-Type":"application/json",...s},body:(0,c.stringify)({type:"sign-in",authenticatorData:r.authenticatorData,credentialId:r.credentialId,serverVerificationId:a.serverVerificationId,clientData:r.clientData,signature:r.signature,origin:r.origin,rpId:e.rp.id})}),d=await l.json();if(!d||!d.storedToken)throw Error(`Error verifying passkey: ${d.message??"unknown error"}`);return await e.storage?.savePasskeyCredentialId(r.credentialId),d}var j=a(80074);async function O(e){let{wallet:t,chain:a,client:i,ecosystem:n}=e,r=t.getAccount()||await t.connect({client:i,chain:a}),s=(0,o.getClientFetch)(i,n),l=await (async()=>{let t=(0,y.f)({authOption:"wallet",client:e.client,ecosystem:e.ecosystem}),i=await s(`${t}&address=${r.address}&chainId=${a.id}`);if(!i.ok)throw Error("Failed to generate SIWE login payload");return await i.json()})(),{signature:d}=await (0,j.signLoginPayload)({payload:l,account:r});return await (async()=>{let t=(0,y.K)({authOption:"wallet",client:e.client,ecosystem:e.ecosystem}),a=await s(`${t}&signature=${d}&payload=${encodeURIComponent(l)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:(0,c.stringify)({signature:d,payload:l})});if(!a.ok)throw Error("Failed to verify SIWE signature");return await a.json()})()}var A=a(99443),$=a(55389),B=a(23802),F=a(53234),x=a(92942),N=a(99232),D=a(23471),U=a(53360),z=a(94879);async function M({client:e,payload:t,storage:a}){let n=await a.getAuthCookie(),r=a.ecosystem,s=(0,o.getClientFetch)(e,r);if(!n)throw Error("No auth token found when signing message");let l={address:t.address,chainId:t.chainId,nonce:Number(t.nonce)},d=await s(`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-authorization`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${n}`},body:(0,c.stringify)(l)});if(!d.ok)throw Error(`Failed to sign message - ${d.status} ${d.statusText}`);return await d.json()}async function _({client:e,payload:{message:t,isRaw:a,originalMessage:n,chainId:r},storage:s}){let l=await s.getAuthCookie(),d=s.ecosystem,h=(0,o.getClientFetch)(e,d);if(!l)throw Error("No auth token found when signing message");let u=await h(`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${l}`},body:(0,c.stringify)({messagePayload:{message:t,isRaw:a,originalMessage:n,chainId:r}})});if(!u.ok)throw Error(`Failed to sign message - ${u.status} ${u.statusText}`);return await u.json()}async function Q({client:e,payload:t,storage:a}){let n=await a.getAuthCookie(),r=a.ecosystem,s=(0,o.getClientFetch)(e,r);if(!n)throw Error("No auth token found when signing transaction");let l=await s(`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${n}`},body:(0,c.stringify)({transactionPayload:t})});if(!l.ok)throw Error(`Failed to sign transaction - ${l.status} ${l.statusText}`);return(await l.json()).signature}async function G({client:e,payload:t,storage:a}){let n=await a.getAuthCookie(),r=a.ecosystem,s=(0,o.getClientFetch)(e,r);if(!n)throw Error("No auth token found when signing typed data");let l=await s(`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${n}`},body:(0,c.stringify)({...t})});if(!l.ok)throw Error(`Failed to sign typed data - ${l.status} ${l.statusText}`);return await l.json()}class q{constructor({client:e,ecosystem:t,address:a,storage:i}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.address=a,this.localStorage=i}async postWalletSetUp(e){await this.localStorage.saveAuthCookie(e.storedToken.cookieString)}async getUserWalletStatus(){let e=await this.localStorage.getAuthCookie();if(!e)return{status:"Logged Out"};let t=await l({authToken:e,client:this.client,ecosystem:this.ecosystem});if(!t)return{status:"Logged Out"};let a=t.wallets[0],i={email:t.linkedAccounts.find(e=>void 0!==e.details.email)?.details.email,phoneNumber:t.linkedAccounts.find(e=>void 0!==e.details.phone)?.details.phone,userWalletId:t.id||"",recoveryShareManagement:"ENCLAVE"};return a?{status:"Logged In, Wallet Initialized",walletAddress:a.address,authDetails:i,account:await this.getAccount()}:{status:"Logged In, Wallet Uninitialized",authDetails:i}}async getAccount(){let e=this.client,t=this.localStorage,i=this.address,n=this.ecosystem,r=async i=>{let n=(0,x.getRpcClient)({client:e,chain:(0,B.Q4)(i.chainId)}),r={to:i.to?(0,N.bv)(i.to):void 0,data:i.data,value:R(i.value),gas:R(i.gas),nonce:R(i.nonce)||(0,D.nj)(await a.e(90373).then(a.bind(a,90373)).then(({eth_getTransactionCount:e})=>e(n,{address:(0,N.bv)(this.address),blockTag:"pending"}))),chainId:(0,D.nj)(i.chainId)};return i.authorizationList&&i.authorizationList.length>0?(r.type=4,r.authorizationList=i.authorizationList,r.maxFeePerGas=R(i.maxFeePerGas),r.maxPriorityFeePerGas=R(i.maxPriorityFeePerGas)):R(i.maxFeePerGas)?(r.maxFeePerGas=R(i.maxFeePerGas),r.maxPriorityFeePerGas=R(i.maxPriorityFeePerGas),r.type=2):(r.gasPrice=R(i.gasPrice),r.type=0),Q({client:e,storage:t,payload:r})};return{address:(0,N.bv)(i),async signTransaction(e){if(!e.chainId)throw Error("chainId required in tx to sign");return r({chainId:e.chainId,...e})},async sendTransaction(t){let a=(0,x.getRpcClient)({client:e,chain:(0,B.Q4)(t.chainId)}),s=await r(t),o=await (0,F.B)(a,s);return(0,$.E)({client:e,ecosystem:n,chainId:t.chainId,walletAddress:i,walletType:"inApp",transactionHash:o,contractAddress:t.to??void 0,gasPrice:t.gasPrice}),{transactionHash:o}},async signMessage({message:a,originalMessage:i,chainId:n}){let r="string"==typeof a?{message:a,isRaw:!1,originalMessage:i,chainId:n}:{message:"string"==typeof a.raw?a.raw:(0,A.My)(a.raw),isRaw:!0,originalMessage:i,chainId:n},{signature:s}=await _({client:e,payload:r,storage:t});return s},async signTypedData(a){let i=(0,z.y)(a),{signature:n}=await G({client:e,payload:i,storage:t});return n},async signAuthorization(a){let i=await M({client:e,payload:a,storage:t});return{address:(0,N.bv)(i.address),chainId:Number.parseInt(i.chainId),nonce:BigInt(i.nonce),r:BigInt(i.r),s:BigInt(i.s),yParity:Number.parseInt(i.yParity)}}}}}function R(e){return void 0===e||(0,U.q)(e)?e:(0,D.nj)(e)}var V=a(31564),J=a(4539);let K={height:"100%",width:"100%",border:"none",backgroundColor:"transparent",colorScheme:"light",position:"fixed",top:"0px",right:"0px",zIndex:"2147483646",display:"none",pointerEvents:"all"},H=new Map;class Y{constructor({link:e,baseUrl:t,iframeId:a,container:i,onIframeInitialize:n,localStorage:r,clientId:s,ecosystem:o}){if(Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.localStorage=r,this.clientId=s,this.ecosystem=o,this.iframeBaseUrl=t,"undefined"==typeof document)return;i=i??document.body;let l=document.getElementById(a),c=new URL(e);if(!l||l.src!==c.href){l=document.createElement("iframe");let e={...K};Object.assign(l.style,e),l.setAttribute("id",a),l.setAttribute("fetchpriority","high"),i.appendChild(l),l.src=c.href;let t=e=>{if("ewsIframeLoaded"===e.data.eventType){if(window.removeEventListener("message",t),!l)return void console.warn("thirdweb iFrame not found");this.onIframeLoadHandler(l,n)()}};window.addEventListener("message",t)}this.iframe=l}async onIframeLoadedInitVariables(){return{authCookie:await this.localStorage.getAuthCookie(),deviceShareStored:await this.localStorage.getDeviceShare(),walletUserId:await this.localStorage.getWalletUserId(),clientId:this.clientId,partnerId:this.ecosystem?.partnerId,ecosystemId:this.ecosystem?.id}}onIframeLoadHandler(e,t){return async()=>{let a=new MessageChannel,i=new Promise((i,n)=>{a.port1.onmessage=r=>{let{data:s}=r;a.port1.close(),s.success||n(Error(s.error)),H.set(e.src,!0),t&&t(),i(!0)}});e?.contentWindow?.postMessage({eventType:"initIframe",data:await this.onIframeLoadedInitVariables()},this.iframeBaseUrl,[a.port2]),await i}}async call({procedureName:e,params:t,showIframe:a=!1}){if(!this.iframe)throw Error("Iframe not found. You are likely calling this from the backend where the DOM is not available.");for(;!H.get(this.iframe.src);)await (0,J.y)(1e3*this.POLLING_INTERVAL_SECONDS);a&&(this.iframe.style.display="block",await (0,J.y)(5));let i=new MessageChannel,n=new Promise((e,t)=>{i.port1.onmessage=async n=>{let{data:r}=n;i.port1.close(),a&&(await (0,J.y)(100),this.iframe&&(this.iframe.style.display="none")),r.success?e(r.data):t(Error(r.error))}});return this.iframe.contentWindow?.postMessage({eventType:e,data:{...t,...await this.onIframeLoadedInitVariables()}},this.iframeBaseUrl,[i.port2]),n}destroy(){this.iframe&&H.delete(this.iframe.src)}}class X extends Y{constructor({clientId:e,baseUrl:t,ecosystem:a}){super({iframeId:Z+(a?.id||""),link:function({clientId:e,baseUrl:t,path:a,ecosystem:i,queryParams:n}){let r=new URL(`${a}`,t);if(n)for(let e of Object.keys(n))r.searchParams.set(e,n[e]?.toString()||"");return r.searchParams.set("clientId",e),i?.partnerId!==void 0&&r.searchParams.set("partnerId",i.partnerId),i?.id!==void 0&&r.searchParams.set("ecosystemId",i.id),r}({clientId:e,path:V.CW,ecosystem:a,baseUrl:t}).href,baseUrl:t,container:"undefined"==typeof document?void 0:document.body,localStorage:new b.t({storage:s.n,clientId:e,ecosystem:a}),clientId:e,ecosystem:a}),this.clientId=e,this.ecosystem=a}}let Z="thirdweb-in-app-wallet-iframe";async function ee({client:e,ecosystem:t,authToken:a}){let n=(0,o.getClientFetch)(e,t),r=await n(`${(0,i.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/generate`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${a}`}});if(!r.ok)throw Error(`Failed to generate wallet - ${r.status} ${r.statusText}`);let{wallet:s}=await r.json();return s}class et{constructor({baseUrl:e,querier:t,preLogin:a,postLogin:i,client:n,ecosystem:r}){Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=e,this.LoginQuerier=t,this.preLogin=a,this.postLogin=i,this.client=n,this.ecosystem=r}async sendEmailLoginOtp({email:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebEmailLoginOtp",params:{email:e}})}async sendSmsLoginOtp({phoneNumber:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebSmsLoginOtp",params:{phoneNumber:e}})}}class ea extends et{async authenticateWithModal(){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:void 0,showIframe:!0})}async loginWithModal(){await this.preLogin();let e=await this.authenticateWithModal();return this.postLogin(e)}async authenticateWithIframe({email:e}){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:{email:e},showIframe:!0})}async loginWithIframe({email:e}){await this.preLogin();let t=await this.authenticateWithIframe({email:e});return this.postLogin(t)}async authenticateWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||0===e.length)throw Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({procedureName:"loginWithCustomJwt",params:{encryptionKey:e,jwt:t}})}async loginWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||0===e.length)throw Error("Encryption key is required for custom jwt auth");await this.preLogin();let a=await this.authenticateWithCustomJwt({encryptionKey:e,jwt:t});return this.postLogin(a)}async authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t}){return this.LoginQuerier.call({procedureName:"loginWithCustomAuthEndpoint",params:{encryptionKey:e,payload:t}})}async loginWithCustomAuthEndpoint({encryptionKey:e,payload:t}){if(!e||0===e.length)throw Error("Encryption key is required for custom auth");await this.preLogin();let a=await this.authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t});return this.postLogin(a)}async authenticateWithEmailOtp({email:e,otp:t,recoveryCode:a}){return this.LoginQuerier.call({procedureName:"verifyThirdwebEmailLoginOtp",params:{email:e,otp:t,recoveryCode:a}})}async loginWithEmailOtp({email:e,otp:t,recoveryCode:a}){let i=await this.authenticateWithEmailOtp({email:e,otp:t,recoveryCode:a});return this.postLogin(i)}async authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:a}){return this.LoginQuerier.call({procedureName:"verifyThirdwebSmsLoginOtp",params:{phoneNumber:e,otp:t,recoveryCode:a}})}async loginWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:a}){let i=await this.authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:a});return this.postLogin(i)}}class ei{constructor({client:e,querier:t,onAuthSuccess:a,ecosystem:i,baseUrl:n,localStorage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=i,this.AuthQuerier=t,this.localStorage=r,this.onAuthSuccess=a,this.BaseLogin=new ea({postLogin:async e=>this.postLogin(e),preLogin:async()=>{await this.preLogin()},ecosystem:i,querier:t,client:e,baseUrl:n})}async preLogin(){await this.logout()}async postLogin({storedToken:e,walletDetails:t}){return e.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(e.cookieString),await this.onAuthSuccess({storedToken:e,walletDetails:t})}async loginWithAuthToken(e,t){"Backend"!==e.storedToken.authProvider&&await this.preLogin();let a=await l({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!a)throw Error("Cannot login, no user found for auth token");if(a.wallets.length>0&&a.wallets[0]?.type==="enclave")return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:a.wallets[0].address}});if(0===a.wallets.length){let t=await ee({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:t.address}})}let i=await this.AuthQuerier.call({procedureName:"loginWithStoredTokenDetails",params:{storedToken:e.storedToken,recoveryCode:t}});return this.postLogin(i)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(e){return this.BaseLogin.loginWithIframe(e)}async authenticateWithIframe(e){return this.BaseLogin.authenticateWithIframe(e)}async loginWithCustomJwt(e){return this.BaseLogin.loginWithCustomJwt(e)}async authenticateWithCustomJwt(e){return this.BaseLogin.authenticateWithCustomJwt(e)}async loginWithCustomAuthEndpoint(e){return this.BaseLogin.loginWithCustomAuthEndpoint(e)}async authenticateWithCustomAuthEndpoint(e){return this.BaseLogin.authenticateWithCustomAuthEndpoint(e)}async sendEmailLoginOtp({email:e}){return this.BaseLogin.sendEmailLoginOtp({email:e})}async sendSmsLoginOtp({phoneNumber:e}){return this.BaseLogin.sendSmsLoginOtp({phoneNumber:e})}async loginWithEmailOtp(e){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(e)}async authenticateWithEmailOtp(e){return this.BaseLogin.authenticateWithEmailOtp(e)}async loginWithSmsOtp(e){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(e)}async authenticateWithSmsOtp(e){return this.BaseLogin.authenticateWithSmsOtp(e)}async logout(){let e=await this.localStorage.removeAuthCookie(),t=await this.localStorage.removeWalletUserId();return{success:e||t}}}var en=a(43265);let er=async e=>{let{client:t,ecosystem:a}=e,i=(0,y.f)({client:t,ecosystem:a,authOption:e.strategy}),n={"Content-Type":"application/json","x-client-id":t.clientId};a?.id&&(n["x-ecosystem-id"]=a.id),a?.partnerId&&(n["x-ecosystem-partner-id"]=a.partnerId);let r=(()=>{switch(e.strategy){case"email":return{email:e.email};case"phone":return{phone:e.phoneNumber}}})(),s=await fetch(i,{method:"POST",headers:n,body:(0,c.stringify)(r)});if(!s.ok)throw Error("Failed to send verification code");return await s.json()},es=async e=>{let{client:t,ecosystem:a}=e,i=(0,y.K)({authOption:e.strategy,client:e.client,ecosystem:e.ecosystem}),n={"Content-Type":"application/json","x-client-id":t.clientId};a?.id&&(n["x-ecosystem-id"]=a.id),a?.partnerId&&(n["x-ecosystem-partner-id"]=a.partnerId);let r=(()=>{switch(e.strategy){case"email":return{email:e.email,code:e.verificationCode};case"phone":return{phone:e.phoneNumber,code:e.verificationCode}}})(),s=await fetch(i,{method:"POST",headers:n,body:(0,c.stringify)(r)});if(!s.ok)throw Error("Failed to verify verification code");return await s.json()};class eo{constructor({client:e,ecosystem:t,querier:a,localStorage:i}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.walletManagerQuerier=a,this.localStorage=i}async postWalletSetUp(e){e.deviceShareStored&&await this.localStorage.saveDeviceShare(e.deviceShareStored,e.storedToken.authDetails.userWalletId)}async getUserWalletStatus(){let e=await this.walletManagerQuerier.call({procedureName:"getUserStatus",params:void 0});return"Logged In, Wallet Initialized"===e.status?{status:"Logged In, Wallet Initialized",...e.user,account:await this.getAccount()}:"Logged In, New Device"===e.status?{status:"Logged In, New Device",...e.user}:"Logged In, Wallet Uninitialized"===e.status?{status:"Logged In, Wallet Uninitialized",...e.user}:{status:e.status}}async getAccount(){let e=this.walletManagerQuerier,t=this.client,a=this.ecosystem?.partnerId,{address:n}=await e.call({procedureName:"getAddress",params:void 0}),r=async t=>{let n={to:t.to??void 0,data:t.data,value:t.value,gasLimit:t.gas,nonce:t.nonce,chainId:t.chainId};t.maxFeePerGas?(n.accessList=t.accessList,n.maxFeePerGas=t.maxFeePerGas,n.maxPriorityFeePerGas=t.maxPriorityFeePerGas,n.type=2):(n.gasPrice=t.gasPrice,n.type=0);let r=(0,i.getThirdwebDomains)().rpc,{signedTransaction:s}=await e.call({procedureName:"signTransaction",params:{transaction:n,chainId:t.chainId,partnerId:a,rpcEndpoint:`https://${t.chainId}.${r}`}});return s};return{address:(0,N.bv)(n),async signTransaction(e){if(!e.chainId)throw Error("chainId required in tx to sign");return r({...e,chainId:e.chainId})},async sendTransaction(e){let a=(0,x.getRpcClient)({client:t,chain:(0,B.Q4)(e.chainId)}),i=await r(e),s=await (0,F.B)(a,i);return(0,$.E)({client:t,chainId:e.chainId,walletAddress:n,walletType:"inApp",transactionHash:s,contractAddress:e.to??void 0,gasPrice:e.gasPrice}),{transactionHash:s}},async signMessage({message:t}){let i="string"==typeof t?t:t.raw instanceof Uint8Array?t.raw:(0,D.IQ)(t.raw),{signedMessage:n}=await e.call({procedureName:"signMessage",params:{message:i,partnerId:a,chainId:1}});return n},async signTypedData(t){let n=(0,z.y)(t);n.types?.EIP712Domain&&(n.types.EIP712Domain=void 0);let r=n.domain,s=r?.chainId,o={...r?.verifyingContract?{verifyingContract:r?.verifyingContract}:{},name:r?.name,version:r?.version};s&&(o.chainId=s);let l=(0,i.getThirdwebDomains)().rpc,{signedTypedData:c}=await e.call({procedureName:"signTypedDataV4",params:{domain:o,types:n.types,message:n.message,chainId:Number.parseInt(BigInt(s||1).toString()),partnerId:a,rpcEndpoint:`https://${s}.${l}`}});return c}}}}class el{isClientIdLegacyPaper(e){return!!(e.indexOf("-")>0)&&36===e.length}constructor({client:e,onAuthSuccess:t,ecosystem:a,passkeyDomain:n,storage:o}){if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(e.clientId))throw Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");let l=(0,i.getThirdwebBaseUrl)("inAppWallet");this.client=e,this.ecosystem=a,this.passkeyDomain=n,this.storage=new b.t({storage:o??("undefined"!=typeof window&&window.localStorage?s.n:r),clientId:e.clientId,ecosystem:a}),this.querier=new X({clientId:e.clientId,ecosystem:a,baseUrl:l}),this.auth=new ei({client:e,querier:this.querier,baseUrl:l,localStorage:this.storage,ecosystem:a,onAuthSuccess:async e=>{if(t?.(e),"sharded"===e.storedToken.authDetails.walletType&&(await this.querier.call({procedureName:"migrateFromShardToEnclave",params:{storedToken:e.storedToken}})||console.warn("Failed to migrate from sharded to enclave wallet, continuing with sharded wallet")),this.wallet=await this.initializeWallet(e.storedToken.cookieString),!this.wallet)throw Error("Failed to initialize wallet");let i="deviceShareStored"in e.walletDetails?e.walletDetails.deviceShareStored:void 0;return await this.wallet.postWalletSetUp({storedToken:e.storedToken,deviceShareStored:i}),this.wallet instanceof eo&&await this.querier.call({procedureName:"initIframe",params:{partnerId:a?.partnerId,ecosystemId:a?.id,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in e.walletDetails?e.walletDetails.deviceShareStored:null,walletUserId:e.storedToken.authDetails.userWalletId,authCookie:e.storedToken.cookieString}}),{user:{status:"Logged In, Wallet Initialized",authDetails:e.storedToken.authDetails,account:await this.wallet.getAccount(),walletAddress:e.walletDetails.walletAddress}}}})}async initializeWallet(e){let t=await this.storage.getAuthCookie();if(!e&&null===t)throw Error("No auth token provided and no stored auth token found to initialize the wallet");let a=await l({authToken:e||t,client:this.client,ecosystem:this.ecosystem});if(!a)throw Error("Cannot initialize wallet, no user logged in");if(0===a.wallets.length)throw Error("Cannot initialize wallet, this user does not have a wallet generated yet");return a.wallets[0]?.type==="enclave"?new q({client:this.client,ecosystem:this.ecosystem,address:a.wallets[0].address,storage:this.storage}):new eo({client:this.client,ecosystem:this.ecosystem,querier:this.querier,localStorage:this.storage})}async getUser(){if(!this.wallet){let e=await this.storage.getAuthCookie();if(!e)return{status:"Logged Out"};this.wallet=await this.initializeWallet(e)}if(!this.wallet)throw Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(e){return er({...e,client:this.client,ecosystem:this.ecosystem})}async authenticateWithRedirect(e,t,a){return(0,en.N)({authOption:e,client:this.client,ecosystem:this.ecosystem,redirectUrl:a,mode:t})}async loginWithAuthToken(e,t){return this.auth.loginWithAuthToken(e,t)}async authenticate(e){let t=e.strategy;switch(t){case"email":case"phone":return es({...e,client:this.client,ecosystem:this.ecosystem});case"auth_endpoint":return m({payload:e.payload,client:this.client,ecosystem:this.ecosystem});case"jwt":return k({jwt:e.jwt,client:this.client,ecosystem:this.ecosystem});case"passkey":return this.passkeyAuth(e);case"iframe_email_verification":return this.auth.authenticateWithIframe({email:e.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"github":case"twitch":case"farcaster":case"line":case"x":case"steam":case"coinbase":case"discord":return(0,en.x)({authOption:t,client:this.client,ecosystem:this.ecosystem,closeOpenedWindow:e.closeOpenedWindow,openedWindow:e.openedWindow});case"guest":return I({client:this.client,ecosystem:this.ecosystem,storage:s.n});case"backend":return f({client:this.client,walletSecret:e.walletSecret,ecosystem:this.ecosystem});case"wallet":return O({ecosystem:this.ecosystem,client:this.client,wallet:e.wallet,chain:e.chain})}}async connect(e){let t=e.strategy;switch(t){case"auth_endpoint":case"jwt":{let t=await this.authenticate(e);return await this.loginWithAuthToken(t,e.encryptionKey)}case"iframe_email_verification":return this.auth.loginWithIframe({email:e.email});case"iframe":return this.auth.loginWithModal();case"passkey":{let t=await this.passkeyAuth(e);return this.loginWithAuthToken(t)}case"backend":case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"github":case"line":case"x":case"guest":case"coinbase":case"twitch":case"steam":case"discord":{let t=await this.authenticate(e);return await this.auth.loginWithAuthToken(t)}default:var a,i=t;throw Error((void 0)??`Invalid param: ${i}`)}}async logout(){return await this.auth.logout()}async passkeyAuth(e){let{PasskeyWebClient:t}=await Promise.resolve().then(a.bind(a,30658)),{passkeyName:i,storeLastUsedPasskey:n=!0}=e,r=new t,s=this.storage;return"sign-up"===e.type?L({client:this.client,ecosystem:this.ecosystem,username:i,passkeyClient:r,storage:n?s:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}}):E({client:this.client,ecosystem:this.ecosystem,passkeyClient:r,storage:n?s:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}})}async linkProfile(e){let{storedToken:t}=await this.authenticate(e);return await T({client:e.client,tokenToLink:t.cookieString,storage:this.storage,ecosystem:e.ecosystem||this.ecosystem})}async unlinkProfile(e){return await S({client:this.client,storage:this.storage,ecosystem:this.ecosystem,profileToUnlink:e})}async getProfiles(){return P({client:this.client,ecosystem:this.ecosystem,storage:this.storage})}}},53234:(e,t,a)=>{a.d(t,{B:()=>i});async function i(e,t){return await e({method:"eth_sendRawTransaction",params:[t]})}},80074:(e,t,a)=>{a.r(t),a.d(t,{signLoginPayload:()=>i});async function i(e){let{payload:t,account:a}=e;return{signature:await a.signMessage({message:function(e){let t=[`${e.domain} wants you to sign in with your Ethereum account:`,e.address].join("\n");t=[t,e.statement].join("\n\n"),e.statement&&(t+="\n");let a=[];if(e.uri){let t=`URI: ${e.uri}`;a.push(t)}let i=`Version: ${e.version}`;if(a.push(i),e.chain_id){let t=`Chain ID: ${e.chain_id}`||"1";a.push(t)}let n=`Nonce: ${e.nonce}`;a.push(n);let r=`Issued At: ${e.issued_at}`;a.push(r);let s=`Expiration Time: ${e.expiration_time}`;if(a.push(s),e.invalid_before){let t=`Not Before: ${e.invalid_before}`;a.push(t)}return e.resources&&a.push(["Resources:",...e.resources.map(e=>`- ${e}`)].join("\n")),[t,a.join("\n")].join("\n")}(t)}),payload:t}}}}]);