"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[42068],{42068:(e,t,r)=>{r.d(t,{upload:()=>u});var n=r(65597),i=r(8118),a=r(94825),o=r(74960);function f(e){return globalThis.File&&e instanceof File}function l(e){return!!e&&!!(0,a.C)(e,["data","name"])&&!!("string"==typeof e.name&&("string"==typeof e.data||(0,o.mg)(e.data)))}function s(e){return f(e)||(0,o.mg)(e)||l(e)}async function u(e){let t;if(0===e.files.length)return null;if(e.files.map(e=>s(e)||"string"==typeof e).every(e=>!!e))t=e.files;else{let r=e.files,n=function e(t,r=[]){if(s(t))return r.push(t),r;if("object"==typeof t){if(!t)return r;if(Array.isArray(t))for(let n of t)e(n,r);else Object.keys(t).map(n=>e(t[n],r))}return r}(r=function e(t){if("string"==typeof t){if(t.includes("/ipfs/")){let e=t.split("/ipfs/")[1];return`ipfs://${e}`}return t}return"object"==typeof t?!t||s(t)?t:Array.isArray(t)?t.map(t=>e(t)):Object.fromEntries(Object.entries(t).map(([t,r])=>[t,e(r)])):t}(r));if(n.length){let t=await u({...e,files:n});r=function e(t,r){if(s(t)){if(r.length)return r.shift();console.warn("Not enough URIs to replace all files in object.")}return"object"==typeof t?t?Array.isArray(t)?t.map(t=>e(t,r)):Object.fromEntries(Object.entries(t).map(([t,n])=>[t,e(n,r)])):t:t}(r,Array.isArray(t)?t:[t])}t=r.map(e=>"string"==typeof e?e:(0,i.stringify)(e))}let{fileNames:a,form:p}=function(e,t,r){let n=new Map,i=[];for(let a=0;a<t.length;a++){let s=t[a],u="",p=s;if(f(s))if(r?.rewriteFileNames){let e="";if(s.name){let t=s.name.lastIndexOf(".");t>-1&&(e=s.name.substring(t))}u=`${a+r.rewriteFileNames.fileStartNumber}${e}`}else u=`${s.name}`;else l(s)?(p=s.data,u=r?.rewriteFileNames?`${a+r.rewriteFileNames.fileStartNumber}`:`${s.name}`):u=r?.rewriteFileNames?`${a+r.rewriteFileNames.fileStartNumber}`:`${a}`;let c=r?.uploadWithoutDirectory?"files":`files/${u}`;if(n.has(u)){if(function(e,t){if(f(e)&&f(t)){if(e.name===t.name&&e.lastModified===t.lastModified&&e.size===t.size)return!0}else if((0,o.mg)(e)&&(0,o.mg)(t))return(0,o.tv)(e,t);else if(l(e)&&l(t)&&e.name===t.name){if("string"==typeof e.data&&"string"==typeof t.data)return e.data===t.data;if((0,o.mg)(e.data)&&(0,o.mg)(t.data))return(0,o.tv)(e.data,t.data)}return!1}(n.get(u),s)){i.push(u);continue}throw Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${u} was passed for more than one different file.`)}n.set(u,s),i.push(u),e.append("file",new Blob([p]),c)}let a={name:"Storage SDK",keyvalues:{...r?.metadata}};return e.append("pinataMetadata",JSON.stringify(a)),r?.uploadWithoutDirectory&&e.append("pinataOptions",JSON.stringify({wrapWithDirectory:!1})),{form:e,fileNames:i.map(e=>encodeURIComponent(e))}}(new FormData,t,e),c=(0,n.l)();if("browser"===c||"node"===c){let{uploadBatch:t}=await r.e(87995).then(r.bind(r,87995)),n=await t(e.client,p,a,e);return 1===e.files.length?n[0]:n}throw Error("Please, use the uploadMobile function in mobile environments.")}},74960:(e,t,r)=>{let n;function i(e){if(!a(e))throw TypeError(`Expected \`Uint8Array\`, got \`${typeof e}\``)}function a(e){return!!e&&(e.constructor===Uint8Array||"[object Uint8Array]"===Object.prototype.toString.call(e))}function o(e,t){if(i(e),i(t),e===t)return!0;if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function f(e){if("string"!=typeof e)throw TypeError(`Expected \`string\`, got \`${typeof e}\``)}function l(e){let t=e.replace(/-/g,"+").replace(/_/g,"/"),r=t.length%4;return 0!==r&&(t+="=".repeat(4-r)),t}function s(e){var t;return f(e),i((f(e),t=Uint8Array.from(globalThis.atob(l(e)),e=>e.codePointAt(0)))),(!n&&(n=new TextDecoder),n).decode(t)}r.d(t,{tv:()=>o,QM:()=>s,pM:()=>l,mg:()=>a})},94825:(e,t,r)=>{r.d(t,{C:()=>n});function n(e,t=[]){return"object"==typeof e&&null!==e&&t.every(t=>t in e)}}}]);